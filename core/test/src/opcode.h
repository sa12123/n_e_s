#pragma once

#include <cstdint>

// Tests and opcodes should be written without looking at the cpu
// implementation. Look at a data sheet and don't cheat!
enum Opcode : uint8_t {
    BRK = 0x00,
    ORA_INXIND = 0x01,
    SLO_INXIND = 0x03,
    NOP_ZERO04 = 0x04,
    ORA_ZERO = 0x05,
    ASL_ZERO = 0x06,
    SLO_ZERO = 0x07,
    PHP = 0x08,
    ORA_IMM = 0x09,
    ASL_ACC = 0x0A,
    NOP_ABS0C = 0x0C,
    ORA_ABS = 0x0D,
    ASL_ABS = 0x0E,
    SLO_ABS = 0x0F,
    BPL = 0x10,
    ORA_INDINX = 0x11,
    SLO_INDINX = 0x13,
    NOP_ZEROX14 = 0x14,
    ORA_ZEROX = 0x15,
    ASL_ZEROX = 0x16,
    SLO_ZEROX = 0x17,
    CLC = 0x18,
    ORA_ABSY = 0x19,
    NOP_IMP1A = 0x1A,
    SLO_ABSY = 0x1B,
    NOP_ABSX1C = 0x1C,
    ORA_ABSX = 0x1D,
    ASL_ABSX = 0x1E,
    SLO_ABSX = 0x1F,
    JSR = 0x20,
    AND_INXIND = 0x21,
    RLA_INXIND = 0x23,
    BIT_ZERO = 0x24,
    AND_ZERO = 0x25,
    ROL_ZERO = 0x26,
    RLA_ZERO = 0x27,
    PLP = 0x28,
    AND_IMM = 0x29,
    ROL_ACC = 0x2A,
    BIT_ABS = 0x2C,
    AND_ABS = 0x2D,
    ROL_ABS = 0x2E,
    RLA_ABS = 0x2F,
    BMI = 0x30,
    AND_INDINX = 0x31,
    RLA_INDINX = 0x33,
    NOP_ZEROX34 = 0x34,
    AND_ZEROX = 0x35,
    ROL_ZEROX = 0x36,
    RLA_ZEROX = 0x37,
    SEC = 0x38,
    AND_ABSY = 0x39,
    NOP_IMP3A = 0x3A,
    RLA_ABSY = 0x3B,
    NOP_ABSX3C = 0x3C,
    AND_ABSX = 0x3D,
    ROL_ABSX = 0x3E,
    RLA_ABSX = 0x3F,
    RTI = 0x40,
    EOR_INXIND = 0x41,
    SRE_INXIND = 0x43,
    NOP_ZERO44 = 0x44,
    EOR_ZERO = 0x45,
    LSR_ZERO = 0x46,
    SRE_ZERO = 0x47,
    PHA = 0x48,
    EOR_IMM = 0x49,
    LSR_ACC = 0x4A,
    JMP = 0x4C,
    EOR_ABS = 0x4D,
    LSR_ABS = 0x4E,
    SRE_ABS = 0x4F,
    BVC = 0x50,
    EOR_INDINX = 0x51,
    SRE_INDINX = 0x53,
    NOP_ZEROX54 = 0x54,
    EOR_ZEROX = 0x55,
    LSR_ZEROX = 0x56,
    SRE_ZEROX = 0x57,
    CLI = 0x58,
    EOR_ABSY = 0x59,
    NOP_IMP5A = 0x5A,
    SRE_ABSY = 0x5B,
    NOP_ABSX5C = 0x5C,
    EOR_ABSX = 0x5D,
    LSR_ABSX = 0x5E,
    SRE_ABSX = 0x5F,
    RTS = 0x60,
    ADC_INDX = 0x61,
    RRA_INXIND = 0x63,
    NOP_ZERO64 = 0x64,
    ADC_ZERO = 0x65,
    ROR_ZERO = 0x66,
    RRA_ZERO = 0x67,
    PLA = 0x68,
    ADC_IMM = 0x69,
    ROR_ACC = 0x6A,
    JMP_IND = 0x6C,
    ADC_ABS = 0x6D,
    ROR_ABS = 0x6E,
    RRA_ABS = 0x6F,
    BVS = 0x70,
    ADC_INDY = 0x71,
    RRA_INDINX = 0x73,
    NOP_ZEROX74 = 0x74,
    ADC_ZEROX = 0x75,
    ROR_ZEROX = 0x76,
    RRA_ZEROX = 0x77,
    SEI = 0x78,
    ADC_ABSY = 0x79,
    NOP_IMP7A = 0x7A,
    RRA_ABSY = 0x7B,
    NOP_ABSX7C = 0x7C,
    ADC_ABSX = 0x7D,
    ROR_ABSX = 0x7E,
    RRA_ABSX = 0x7F,
    NOP_IMM80 = 0x80,
    STA_INXIND = 0x81,
    SAX_INXIND = 0x83,
    STY_ZERO = 0x84,
    STA_ZERO = 0x85,
    STX_ZERO = 0x86,
    SAX_ZERO = 0x87,
    DEY = 0x88,
    TXA = 0x8A,
    STY_ABS = 0x8C,
    STA_ABS = 0x8D,
    STX_ABS = 0x8E,
    SAX_ABS = 0x8F,
    BCC = 0x90,
    STA_INDINX = 0x91,
    STY_ZEROX = 0x94,
    STA_ZEROX = 0x95,
    STX_ZEROY = 0x96,
    SAX_ZEROY = 0x97,
    TYA = 0x98,
    STA_ABSY = 0x99,
    TXS = 0x9A,
    STA_ABSX = 0x9D,
    LDY_IMM = 0xA0,
    LDA_INXIND = 0xA1,
    LDX_IMM = 0xA2,
    LAX_INXIND = 0xA3,
    LDY_ZERO = 0xA4,
    LDA_ZERO = 0xA5,
    LDX_ZERO = 0xA6,
    LAX_ZERO = 0xA7,
    TAY = 0xA8,
    LDA_IMM = 0xA9,
    TAX = 0xAA,
    LDY_ABS = 0xAC,
    LDA_ABS = 0xAD,
    LDX_ABS = 0xAE,
    LAX_ABS = 0xAF,
    BCS = 0xB0,
    LDA_INDINX = 0xB1,
    LAX_INDINX = 0xB3,
    LDY_ZEROX = 0xB4,
    LDA_ZEROX = 0xB5,
    LDX_ZEROY = 0xB6,
    LAX_ZEROY = 0xB7,
    CLV = 0xB8,
    LDA_ABSY = 0xB9,
    TSX = 0xBA,
    LDY_ABSX = 0xBC,
    LDA_ABSX = 0xBD,
    LDX_ABSY = 0xBE,
    LAX_ABSY = 0xBF,
    CPY_IMM = 0xC0,
    CMP_INXIND = 0xC1,
    DCP_INXIND = 0xC3,
    CPY_ZERO = 0xC4,
    CMP_ZERO = 0xC5,
    DEC_ZERO = 0xC6,
    DCP_ZERO = 0xC7,
    INY = 0xC8,
    CMP_IMM = 0xC9,
    DEX = 0xCA,
    CPY_ABS = 0xCC,
    CMP_ABS = 0xCD,
    DEC_ABS = 0xCE,
    DCP_ABS = 0xCF,
    BNE = 0xD0,
    CMP_INDINX = 0xD1,
    DCP_INDINX = 0xD3,
    NOP_ZEROXD4 = 0xD4,
    CMP_ZEROX = 0xD5,
    DEC_ZEROX = 0xD6,
    DCP_ZEROX = 0xD7,
    CLD = 0xD8,
    CMP_ABSY = 0xD9,
    NOP_IMPDA = 0xDA,
    DCP_ABSY = 0xDB,
    NOP_ABSXDC = 0xDC,
    CMP_ABSX = 0xDD,
    DEC_ABSX = 0xDE,
    DCP_ABSX = 0xDF,
    CPX_IMM = 0xE0,
    SBC_INXIND = 0xE1,
    ISB_INXIND = 0xE3,
    CPX_ZERO = 0xE4,
    SBC_ZERO = 0xE5,
    INC_ZERO = 0xE6,
    ISB_ZERO = 0xE7,
    INX = 0xE8,
    SBC_IMM = 0xE9,
    NOP = 0xEA,
    SBC_IMMEB = 0xEB,
    CPX_ABS = 0xEC,
    SBC_ABS = 0xED,
    INC_ABS = 0xEE,
    ISB_ABS = 0xEF,
    BEQ = 0xF0,
    SBC_INDINX = 0xF1,
    ISB_INDINX = 0xF3,
    NOP_ZEROXF4 = 0xF4,
    SBC_ZEROX = 0xF5,
    INC_ZEROX = 0xF6,
    ISB_ZEROX = 0xF7,
    SED = 0xF8,
    SBC_ABSY = 0xF9,
    NOP_IMPFA = 0xFA,
    ISB_ABSY = 0xFB,
    NOP_ABSXFC = 0xFC,
    SBC_ABSX = 0xFD,
    INC_ABSX = 0xFE,
    ISB_ABSX = 0xFF,
};
